{"ast":null,"code":"import _classCallCheck from\"C:/Users/VEDON/WebstormProjects/mesto-react/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"C:/Users/VEDON/WebstormProjects/mesto-react/node_modules/@babel/runtime/helpers/esm/createClass.js\";var Api=/*#__PURE__*/function(){function Api(options){_classCallCheck(this,Api);// тело конструктора\nthis.baseUrl=options.baseUrl;this.headers=options.headers;}_createClass(Api,[{key:\"_checkResponse\",value:function _checkResponse(res){return res.ok?res.json():Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430 \".concat(res.status));}},{key:\"getInitialCards\",value:function getInitialCards(){return fetch(\"\".concat(this.baseUrl,\"/cards\"),{headers:this.headers}).then(this._checkResponse);}// другие методы работы с API\n},{key:\"getUserInfo\",value:function getUserInfo(){return fetch(\"\".concat(this.baseUrl,\"/users/me\"),{headers:this.headers}).then(this._checkResponse);}},{key:\"patchUserInfo\",value:function patchUserInfo(inputValues){return fetch(\"\".concat(this.baseUrl,\"/users/me\"),{method:'PATCH',headers:this.headers,body:JSON.stringify({name:inputValues.name,about:inputValues.description})}).then(this._checkResponse);}},{key:\"postNewCard\",value:function postNewCard(cardInfo){return fetch(\"\".concat(this.baseUrl,\"/cards\"),{method:'POST',headers:this.headers,body:JSON.stringify(cardInfo)}).then(this._checkResponse);}},{key:\"deleteCard\",value:function deleteCard(id){return fetch(\"\".concat(this.baseUrl,\"/cards/\").concat(id),{method:\"DELETE\",headers:this.headers}).then(this._checkResponse);}},{key:\"putLike\",value:function putLike(id){return fetch(\"\".concat(this.baseUrl,\"/cards/\").concat(id,\"/likes\"),{method:\"PUT\",headers:this.headers}).then(this._checkResponse);}},{key:\"deleteLike\",value:function deleteLike(id){return fetch(\"\".concat(this.baseUrl,\"/cards/\").concat(id,\"/likes\"),{method:\"DELETE\",headers:this.headers}).then(this._checkResponse);}},{key:\"patchAvatar\",value:function patchAvatar(link){return fetch(\"\".concat(this.baseUrl,\"/users/me/avatar\"),{method:\"PATCH\",headers:this.headers,body:JSON.stringify({avatar:link})}).then(this._checkResponse);}}]);return Api;}();var api=new Api({baseUrl:'https://mesto.nomoreparties.co/v1/cohort-62',headers:{authorization:'de4d1a5e-b347-4878-b328-8f0194692392','Content-Type':'application/json'}});export default api;","map":{"version":3,"names":["Api","options","_classCallCheck","baseUrl","headers","_createClass","key","value","_checkResponse","res","ok","json","Promise","reject","concat","status","getInitialCards","fetch","then","getUserInfo","patchUserInfo","inputValues","method","body","JSON","stringify","name","about","description","postNewCard","cardInfo","deleteCard","id","putLike","deleteLike","patchAvatar","link","avatar","api","authorization"],"sources":["C:/Users/VEDON/WebstormProjects/mesto-react/src/utils/Api.js"],"sourcesContent":["class Api {\r\n    constructor(options) {\r\n        // тело конструктора\r\n        this.baseUrl = options.baseUrl;\r\n        this.headers = options.headers;\r\n    }\r\n\r\n    _checkResponse(res) {\r\n        return res.ok\r\n            ? res.json()\r\n            : Promise.reject(`Ошибка ${res.status}`);\r\n    }\r\n\r\n    getInitialCards() {\r\n        return fetch(`${this.baseUrl}/cards`, {\r\n            headers: this.headers\r\n        })\r\n            .then(this._checkResponse)\r\n    }\r\n\r\n    // другие методы работы с API\r\n    getUserInfo() {\r\n        return fetch(`${this.baseUrl}/users/me`, {\r\n            headers: this.headers\r\n        })\r\n            .then(this._checkResponse)\r\n    }\r\n\r\n    patchUserInfo(inputValues) {\r\n        return fetch(`${this.baseUrl}/users/me`, {\r\n            method: 'PATCH',\r\n            headers: this.headers,\r\n            body: JSON.stringify({name: inputValues.name, about: inputValues.description})\r\n        })\r\n            .then(this._checkResponse)\r\n    }\r\n\r\n    postNewCard(cardInfo) {\r\n        return fetch(`${this.baseUrl}/cards`, {\r\n            method: 'POST',\r\n            headers: this.headers,\r\n            body: JSON.stringify(cardInfo)\r\n        })\r\n            .then(this._checkResponse)\r\n    }\r\n\r\n    deleteCard(id) {\r\n        return fetch(`${this.baseUrl}/cards/${id}`, {\r\n            method: \"DELETE\",\r\n            headers: this.headers,\r\n        })\r\n            .then(this._checkResponse)\r\n    }\r\n\r\n    putLike(id) {\r\n        return fetch(`${this.baseUrl}/cards/${id}/likes`, {\r\n            method: \"PUT\",\r\n            headers: this.headers,\r\n        })\r\n            .then(this._checkResponse)\r\n    }\r\n\r\n    deleteLike(id) {\r\n        return fetch(`${this.baseUrl}/cards/${id}/likes`, {\r\n            method: \"DELETE\",\r\n            headers: this.headers,\r\n        })\r\n            .then(this._checkResponse)\r\n    }\r\n\r\n    patchAvatar(link) {\r\n        return fetch(`${this.baseUrl}/users/me/avatar`, {\r\n            method: \"PATCH\",\r\n            headers: this.headers,\r\n            body: JSON.stringify({avatar: link})\r\n        })\r\n            .then(this._checkResponse)\r\n    }\r\n}\r\n\r\nconst api = new Api({\r\n    baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-62',\r\n    headers: {\r\n        authorization: 'de4d1a5e-b347-4878-b328-8f0194692392',\r\n        'Content-Type': 'application/json'\r\n    }\r\n})\r\n\r\nexport default api"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}